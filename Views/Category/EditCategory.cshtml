@model TransactionCategory
@{
    ViewData["Title"] = "Edit Category";
}

<div class="text-center">
    <h1 class="display-4">Edit Category</h1>
    <div>
        @using (Html.BeginForm("EditExistingCategory", "Category"))
        {
            @Html.AntiForgeryToken()
            ;
            <div class="d-flex flex-column gap-2">
                @Html.HiddenFor(x => x.ID)
                @Html.LabelFor(x => x.Name)
                @Html.TextBoxFor(x => x.Name, new { @placeholder = "Category Name", @class = "form-control", @required = true })
                @Html.LabelFor(x => x.Color)
                @Html.TextBoxFor(x => x.Color, new {@type ="color", @class="bg-light rounded border border-grey", @style="width:100%"})

                <input type="submit" name="SaveButton" class="btn btn-primary" value="Save" />
                <input type="button" name="ExitButton" onclick="navigateToHome()" class="btn btn-outline-primary" value="Exit" />

            </div>
        }
    </div>
</div>

<script>
    const navigateToHome = () =>{
        location.href = "@Url.Action("Index", "Category")";
    }
</script>